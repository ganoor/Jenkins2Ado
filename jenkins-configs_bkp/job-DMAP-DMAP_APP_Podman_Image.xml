<?xml version='1.1' encoding='UTF-8'?><flow-definition plugin="workflow-job@1326.ve643e00e9220">  <actions>    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2150.v4cfd8916915c"/>    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2150.v4cfd8916915c">      <jobProperties>        <string>jenkins.model.BuildDiscarderProperty</string>      </jobProperties>      <triggers/>      <parameters>        <string>Service_pack_version</string>        <string>Java_Backend</string>        <string>Flask_Backend_branch</string>        <string>service_pack_location</string>        <string>docker_branch</string>        <string>docker_image_version</string>        <string>docker_image</string>      </parameters>      <options/>    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>  </actions>  <description>Job to Build binary and Image based on the Configuration. Based on the configuration build and Push binary into Azure Blob and/or push the image into Podman Redhat Repository</description>  <keepDependencies>false</keepDependencies>  <properties>    <jenkins.model.BuildDiscarderProperty>      <strategy class="hudson.tasks.LogRotator">        <daysToKeep>-1</daysToKeep>        <numToKeep>10</numToKeep>        <artifactDaysToKeep>-1</artifactDaysToKeep>        <artifactNumToKeep>-1</artifactNumToKeep>      </strategy>    </jenkins.model.BuildDiscarderProperty>    <hudson.model.ParametersDefinitionProperty>      <parameterDefinitions>        <hudson.model.StringParameterDefinition>          <name>Java_Backend</name>          <description>Enter the name of the Java Backend branch</description>          <defaultValue>develop</defaultValue>          <trim>false</trim>        </hudson.model.StringParameterDefinition>        <hudson.model.StringParameterDefinition>          <name>Flask_Backend_branch</name>          <description>Enter the name of the Backend branch</description>          <defaultValue>develop</defaultValue>          <trim>false</trim>        </hudson.model.StringParameterDefinition>        <hudson.model.StringParameterDefinition>          <name>Service_pack_version</name>          <description>Enter the version of Service pack. Sample values will be like: 6.3.2.0</description>          <trim>false</trim>        </hudson.model.StringParameterDefinition>        <hudson.model.ChoiceParameterDefinition>          <name>docker_image</name>          <description>Select Podman Image name</description>          <choices class="java.util.Arrays$ArrayList">            <a class="string-array">              <string>dmap_app_dev</string>              <string>dmap_app_qa</string>              <string>dmap_app_prod</string>            </a>          </choices>        </hudson.model.ChoiceParameterDefinition>        <hudson.model.StringParameterDefinition>          <name>docker_branch</name>          <description>Enter git branch to pull docker files</description>          <defaultValue>develop</defaultValue>          <trim>false</trim>        </hudson.model.StringParameterDefinition>        <hudson.model.StringParameterDefinition>          <name>docker_image_version</name>          <description>Enter the Podman Image version</description>          <defaultValue>v1.0.0.0</defaultValue>          <trim>false</trim>        </hudson.model.StringParameterDefinition>        <hudson.model.StringParameterDefinition>          <name>service_pack_location</name>          <description>Enter service pack location. It should be full path</description>          <trim>false</trim>        </hudson.model.StringParameterDefinition>      </parameterDefinitions>    </hudson.model.ParametersDefinitionProperty>  </properties>  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3837.v305192405b_c0">    <script>pipeline {    agent {        node {            label &apos;build_slave_podman_new&apos;        }    } environment {		BUILD_NAME = &quot;Podman DMAP App Build&quot;	//	NOTIFYUSERS = &apos;rajivm@newtglobalcorp.com&apos;		NOTIFYUSERS = &apos;dmap_dev@newtglobalcorp.com&apos;		PATH = &quot;/home/newtdba/.nvm/versions/node/v18.3.0/bin:/home/newtdba/.local/bin:/home/newtdba/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/newtdba/.nvm/versions/node/v16.18.1/bin/ng:/var/lib/jenkins/sonar-scanner-4.8.1.3023/bin:/usr/lib/jvm/java-11-openjdk-11.0.18.0.10-3.el9.x86_64/bin/java:/home/newtdba/.local/bin/bandit:/opt/sonar-scanner/bin:$PATH&quot;        JAVA_HOME = &apos;/usr/lib/jvm/java-11-openjdk-11.0.18.0.10-3.el9.x86_64&apos;		BUILD_DETAILS = &quot;&lt;BR&gt;Job Name: ${env.JOB_NAME} &lt;BR&gt;Build Number: ${env.BUILD_NUMBER} &lt;BR&gt;Build URL: ${BUILD_URL}&quot;	}    parameters {        string(name: &apos;Java_Backend&apos;, defaultValue: &apos;develop&apos;, description: &apos;Enter the name of the Java Backend branch&apos;)        string(name: &apos;Flask_Backend_branch&apos;, defaultValue: &apos;develop&apos;, description: &apos;Enter the name of the Backend branch&apos;)        string(name: &apos;Service_pack_version&apos;, defaultValue: &apos;&apos;, description: &apos;Enter the version of Service pack. Sample values will be like: 6.3.2.0&apos;)        choice(name: &apos;docker_image&apos;, choices: [&apos;dmap_app_dev&apos;,&apos;dmap_app_qa&apos;,&apos;dmap_app_prod&apos;,], description: &apos;Select Podman Image name&apos;)	    string(name: &apos;docker_branch&apos;, defaultValue: &apos;develop&apos;, description: &apos;Enter git branch to pull docker files&apos;)        string(name: &apos;docker_image_version&apos;, defaultValue: &apos;v1.0.0.0&apos;, description: &apos;Enter the Podman Image version&apos;)        string(name: &apos;service_pack_location&apos;, defaultValue: &apos;&apos;, description: &apos;Enter service pack location. It should be full path&apos;)        }    options {        timestamps()        timeout(time: 5, unit: &apos;HOURS&apos;)        buildDiscarder(logRotator(numToKeepStr: &apos;10&apos;))    }    stages {        stage (&quot;Checkout Code &quot;) {			steps {			    			    dir(&quot;DMAP_Extension_Backend&quot;){			        deleteDir()					echo &quot;Checkout the DMAP_Extension code&quot;					git branch: &apos;${Java_Backend}&apos;, credentialsId: &apos;Kavya_1709&apos;, url: &apos;https://github.com/newtglobalgit/DMAP_Extension-Backend.git&apos;			            }			    dir(&quot;DMAP_Extension_flask&quot;){			        deleteDir()                    echo &quot;Checkout the DMAP_Extension_Flask code&quot;                    script {                        withCredentials([usernamePassword(credentialsId: &apos;Kavya_1709&apos;, usernameVariable: &apos;GIT_USERNAME&apos;, passwordVariable: &apos;GIT_PASSWORD&apos;)]) {                        git url: &quot;https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/newtglobalgit/DMAP_Extension-Flask.git&quot;, branch: &apos;${Flask_Backend_branch}&apos;                        sh &apos;git lfs install&apos;						sh &apos;git lfs fetch&apos;                        sh &apos;git lfs checkout&apos;                            }                    }			        			    }                dir(&quot;DMAP_App_Docker&quot;){			        deleteDir()					echo &quot;Checkout the DMAP_DB_Dockerfile&quot;					git branch: &apos;${docker_branch}&apos;, credentialsId: &apos;Kavya_1709&apos;, url: &apos;https://github.com/newtglobalgit/DMAP_Extension_Docker_Linux.git&apos;			        } 			      }        }			        stage (&quot;podman Build&quot;) {    		steps {    		    dir(&quot;DMAP_App_Docker&quot;){    		    script {    		    writeFile(file: &apos;dmap_image_release.yaml&apos;, text:&quot;name: DMAP\nimage_version: ${params.docker_image_version}\ninitial_service_pack_version: ${params.Service_pack_version}\n&quot;)    		    writeFile(file: &apos;dmap_binary_install_mode.yaml&apos;, text:&quot;binary_install_mode: automatic\n&quot;)		        echo &quot;Podman Azure Blob&quot;		        writeFile(file: &apos;dmap_image_release.yaml&apos;, text:&quot;name: DMAP\nimage_version: ${params.docker_image_version}\ninitial_service_pack_version: ${params.Service_pack_version}\n&quot;)		        		        echo &quot;Build Azure Podman Image&quot;			    sh &quot;&quot;&quot;                sed -i -e &apos;s#service_pack_location#${params.service_pack_location}#&apos; Dockerfile                &quot;&quot;&quot;                			    sh &quot;podman build --cgroup-manager=cgroupfs -t ngdmapo/${params.docker_image}:${params.docker_image_version} .&quot;					 			     sh &quot;podman images&quot;    		    }			    }    		}    		    	}     stage (&quot;podman Push&quot;) {    		steps {    		   script{    		        echo &quot;Push podman Image&quot;    			        			   withCredentials([usernamePassword(credentialsId: &apos;podmanHubCred&apos;, passwordVariable: &apos;podmanHubPassword&apos;, usernameVariable: &apos;podmanHubUser&apos;)]) {                        sh &quot;podman login -u ${env.podmanHubUser} -p ${env.podmanHubPassword} quay.io&quot;    			    			        sh &quot;podman tag localhost/ngdmapo/${docker_image}:${docker_image_version} quay.io/${env.podmanHubUser}/ngdmapo/${docker_image}:latest&quot;    			        sh &quot;podman push quay.io/${env.podmanHubUser}/ngdmapo/${docker_image}:latest&quot;    			        sh &quot;podman tag localhost/ngdmapo/${docker_image}:${docker_image_version} quay.io/${env.podmanHubUser}/ngdmapo/${docker_image}:${docker_image_version}&quot;						sh &quot;podman push quay.io/${env.podmanHubUser}/ngdmapo/${docker_image}:${docker_image_version}&quot;    			        //sh &quot;podman push quay.io/${env.podmanHubUser}/ngdmapo/${docker_image}:${docker_image_version}&quot;    			            			            			    }    			        			    }    	    	    }	    }    }    post {        always {            emailext attachmentsPattern: &apos;DMAP_Extension_flask/AppBanditAnalysisReport.html,DMAP_Extension_Backend/snyk_report.html,DMAP_Extension_Backend/DMAP_App_Junit_CoverageReport.html,DMAP_Extension_Backend/DMAP_App_Junit_PassFailReport.html,DMAP_Extension_flask/SonarQube/App_Python_Sonar_Issues.xlsx,DMAP_Extension_flask/SonarQube/App_Java_Sonar_Issues.xlsx,DMAP_Extension_flask/ModularTestCoverageReport.html,DMAP_Extension_flask/ModularTestOutput.html&apos;,           // emailext attachmentsPattern: &apos;DMAP_Extension_flask/AppBanditAnalysisReport.html,DMAP_Extension_Backend/snyk_report.html,DMAP_Extension_flask/SonarQube/App_Python_Sonar_Issues.xlsx,DMAP_Extension_flask/SonarQube/App_Java_Sonar_Issues.xlsx,DMAP_Extension_flask/ModularTestCoverageReport.html,DMAP_Extension_flask/ModularTestOutput.html&apos;,            subject: &quot;Jenkins Job Report For ${BUILD_NAME} - ${currentBuild.currentResult}&quot;,			body: &quot;BUILD DETAILS: ${BUILD_DETAILS} &lt;BR&gt; BUILD STATUS: ${currentBuild.currentResult}&quot;,			to: &quot;${NOTIFYUSERS}&quot;        }            }   }</script>    <sandbox>true</sandbox>  </definition>  <triggers/>  <disabled>false</disabled></flow-definition>