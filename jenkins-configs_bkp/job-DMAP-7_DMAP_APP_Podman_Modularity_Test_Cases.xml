<?xml version='1.1' encoding='UTF-8'?><flow-definition plugin="workflow-job@1145.v7f2433caa07f">  <actions>    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.1"/>    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.1">      <jobProperties>        <string>jenkins.model.BuildDiscarderProperty</string>      </jobProperties>      <triggers/>      <parameters>        <string>APP_Podman_Image</string>        <string>Flask_Backend_branch</string>        <string>DB_Podman_Image</string>      </parameters>      <options/>    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>  </actions>  <description>DMAP Application Modularity Test Case Report Generation Testing</description>  <keepDependencies>false</keepDependencies>  <properties>    <jenkins.model.BuildDiscarderProperty>      <strategy class="hudson.tasks.LogRotator">        <daysToKeep>-1</daysToKeep>        <numToKeep>30</numToKeep>        <artifactDaysToKeep>-1</artifactDaysToKeep>        <artifactNumToKeep>-1</artifactNumToKeep>      </strategy>    </jenkins.model.BuildDiscarderProperty>    <hudson.model.ParametersDefinitionProperty>      <parameterDefinitions>        <hudson.model.StringParameterDefinition>          <name>Flask_Backend_branch</name>          <description>Enter the name of the Backend branch</description>          <defaultValue>develop</defaultValue>          <trim>false</trim>        </hudson.model.StringParameterDefinition>        <hudson.model.StringParameterDefinition>          <name>DB_Podman_Image</name>          <description>Enter the podman image name based on the environments in which DMAP DB backend is running</description>          <defaultValue>quay.io/newtglobaldev/ngdmapo/dmap_azure_blob_podman_dev:v8.1.4.0</defaultValue>          <trim>false</trim>        </hudson.model.StringParameterDefinition>        <hudson.model.StringParameterDefinition>          <name>APP_Podman_Image</name>          <description>Enter the podman image name based on the environments in which DMAP App services is running</description>          <defaultValue>quay.io/newtglobaldev/ngdmapo/dmap_app_migration_azure_blob_podman_dev:v1.1.4.0</defaultValue>          <trim>false</trim>        </hudson.model.StringParameterDefinition>        <hudson.model.StringParameterDefinition>          <name>App_Podman_Image</name>          <description>Enter the Podman image name  based on the environments in which DMAP App services is running</description>          <defaultValue>quay.io/newtglobaldev/ngdmapo/dmap_app_migration_azure_blob_podman_dev:v1.1.4.0</defaultValue>          <trim>false</trim>        </hudson.model.StringParameterDefinition>      </parameterDefinitions>    </hudson.model.ParametersDefinitionProperty>    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>      <triggers/>    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>  </properties>  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.82">    <script>pipeline {     agent {			node {				label &apos;build_slave_podman&apos;			}		}    environment {		BUILD_NAME = &quot;DMAP App Modularity Test case report&quot;		NOTIFYUSERS = &apos;rajivm@newtglobalcorp.com&apos;		//NOTIFYUSERS = &apos;dmap_dev@newtglobalcorp.com&apos;		BUILD_DETAILS = &quot;&lt;BR&gt;Job Name: ${env.JOB_NAME} &lt;BR&gt;Build Number: ${env.BUILD_NUMBER} &lt;BR&gt;Build URL: ${BUILD_URL}&quot;	}    parameters {        string(name: &apos;Flask_Backend_branch&apos;, defaultValue: &apos;develop&apos;, description: &apos;Enter the name of the Backend branch&apos;)	    string(name: &apos;DB_Podman_Image&apos;, defaultValue: &apos;quay.io/newtglobaldev/ngdmapo/dmap_azure_blob_podman_dev:v8.1.4.0&apos;, description: &apos;Enter the podman image name based on the environments in which DMAP DB backend is running&apos;)		string(name: &apos;APP_Podman_Image&apos;, defaultValue: &apos;quay.io/newtglobaldev/ngdmapo/dmap_app_migration_azure_blob_podman_dev:v1.1.4.0&apos;, description: &apos;Enter the podman image name based on the environments in which DMAP App services is running&apos;)        }    options {        timestamps()        timeout(time: 5, unit: &apos;HOURS&apos;)        buildDiscarder(logRotator(numToKeepStr: &apos;30&apos;))    }    stages {        stage (&quot;Checkout Code &quot;) {			steps {			    			  			    dir(&quot;DMAP_Extension_flask&quot;){			        deleteDir()					echo &quot;Checkout the DMAP_Extension_flask code&quot;					git branch: Flask_Backend_branch, credentialsId: &apos;Kavya_1709&apos;, url: &apos;https://github.com/newtglobalgit/DMAP_Extension-Flask.git&apos;			             }			      }        }	        stage (&quot;Start Db Container&quot;) {            steps{                sh &quot;podman run -d -it  -p 9090:8080 -p 5002:5002 -e UI_PORT=9090 -e SERVICE_PORT=5002  -e DB_PORT=5433 --name=dmap_db_azure_enterprise_master ${params.DB_Podman_Image}&quot;            }        }		stage (&quot;Modular Tests&quot;) {		    steps {				echo &quot;---------------------Creating App build container for modular test start---------------------------&quot;								withCredentials([string(credentialsId: &apos;GIT_User&apos;, variable: &apos;GITUser&apos;),string(credentialsId: &apos;Git_New_PAT&apos;, variable: &apos;Password&apos;)]) {                    sh &quot;podman run -d -it -e GIT_USER=${GITUser} -e GIT_PASS=${Password} -e GIT_BRANCH=${params.Flask_Backend_branch} -p 5005:5000 --name=run_modular_test_scripts ${params.APP_Podman_Image}&quot;                    				                }						    echo &quot;---------------------Creating App build container for modular test end---------------------------&quot;				echo &quot;------------------Wait 20 minutes to start App Services-------------------------------&quot;				sleep 1200				dir(&quot;DMAP_Extension_flask&quot;){					echo &quot;------------------List the Running and stopped Docker process ------------------------------&quot;					sh &quot;podman ps -a&quot;					echo &quot;------------------Copy the modularTest Shell script to DMAP app running container ------------------------------&quot;					sh &quot;podman cp run_modularTest.sh run_modular_test_scripts:/usr/local/tomcat&quot;					echo &quot;------------Copied modular test build script inside build container------------------&quot;										echo &quot;------------Start modular test build script inside build container by using the root user ------------------&quot;					sh &quot;podman exec --user root run_modular_test_scripts sh /usr/local/tomcat/run_modularTest.sh&quot;					sleep 180										echo &quot;------------Copying modular test cases reports------------------&quot;					sh &quot;podman cp run_modular_test_scripts:/usr/local/tomcat/DMAP_Extension-Flask/ModularTestOutput.xlsx .&quot;					sh &quot;podman cp run_modular_test_scripts:/usr/local/tomcat/DMAP_Extension-Flask/htmlcov/index.html .&quot;					sh &quot;mv index.html ModularTestCoverageReport.html&quot;					echo &quot;------------Completed copying modular test cases reports------------------&quot;										echo &quot;------------Removing modular test container ------------------&quot;					sh &quot;podman stop run_modular_test_scripts&quot;					sh &quot;podman rm -f run_modular_test_scripts&quot;					sh &quot;podman stop dmap_db_azure_enterprise_master&quot;					sh &quot;podman rm -f dmap_db_azure_enterprise_master&quot;										echo &quot;------------Modular test container removed successfully------------------&quot;					publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: &apos;.&apos;, reportFiles: &apos;ModularTestOutput.xlsx&apos;, reportName: &apos;Modular Test Output&apos;, reportTitles: &apos;Modular Test Output&apos;])					publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: &apos;.&apos;, reportFiles: &apos;ModularTestCoverageReport.html&apos;, reportName: &apos;Modular Test Coverage&apos;, reportTitles: &apos;Modular Test Coverage&apos;])				}			}		}    }    post {        always {            emailext attachmentsPattern: &apos;DMAP_Extension_flask/ModularTestOutput.xlsx, DMAP_Extension_flask/ModularTestCoverageReport.html&apos;,            subject: &quot;Jenkins Job Report For ${BUILD_NAME} - ${currentBuild.currentResult}&quot;,			body: &quot;BUILD DETAILS: ${BUILD_DETAILS} &lt;BR&gt; BUILD STATUS: ${currentBuild.currentResult}&quot;,			to: &quot;${NOTIFYUSERS}&quot;        }    }}</script>    <sandbox>true</sandbox>  </definition>  <triggers/>  <disabled>false</disabled></flow-definition>