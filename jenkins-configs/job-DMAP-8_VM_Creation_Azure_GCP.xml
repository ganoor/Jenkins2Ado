<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@1326.ve643e00e9220">  <actions>    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2150.v4cfd8916915c"/>    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2150.v4cfd8916915c">      <jobProperties>        <string>jenkins.model.BuildDiscarderProperty</string>      </jobProperties>      <triggers/>      <parameters/>      <options/>    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>  </actions>  <description>VM based container creation and testing for selenium</description>  <keepDependencies>false</keepDependencies>  <properties>    <jenkins.model.BuildDiscarderProperty>      <strategy class="hudson.tasks.LogRotator">        <daysToKeep>-1</daysToKeep>        <numToKeep>10</numToKeep>        <artifactDaysToKeep>-1</artifactDaysToKeep>        <artifactNumToKeep>-1</artifactNumToKeep>      </strategy>    </jenkins.model.BuildDiscarderProperty>    <hudson.model.ParametersDefinitionProperty>      <parameterDefinitions>        <hudson.model.ChoiceParameterDefinition>          <name>VM</name>          <description>Select in which cloud environment the VM should be created</description>          <choices class="java.util.Arrays$ArrayList">            <a class="string-array">              <string>Azure</string>              <string>GCP</string>            </a>          </choices>        </hudson.model.ChoiceParameterDefinition>        <hudson.model.StringParameterDefinition>          <name>Image_Version</name>          <description>Version of the image to be pulled for Container creation in VM</description>          <defaultValue>8.1.4.0</defaultValue>          <trim>false</trim>        </hudson.model.StringParameterDefinition>      </parameterDefinitions>    </hudson.model.ParametersDefinitionProperty>    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>      <triggers/>    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>  </properties>  <definition class="org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition" plugin="workflow-cps@3837.v305192405b_c0">    <scm class="hudson.plugins.git.GitSCM" plugin="git@4.3.0">      <configVersion>2</configVersion>      <userRemoteConfigs>        <hudson.plugins.git.UserRemoteConfig>          <url>https://github.com/newtglobalgit/DMAP_Jenkins_Pipelines.git</url>          <credentialsId>Kavya_1709</credentialsId>        </hudson.plugins.git.UserRemoteConfig>      </userRemoteConfigs>      <branches>        <hudson.plugins.git.BranchSpec>          <name>*/scripts_backup</name>        </hudson.plugins.git.BranchSpec>      </branches>      <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>      <submoduleCfg class="list"/>      <extensions/>    </scm>    <scriptPath>8_VM_Creation_Azure_GCP/script.groovy</scriptPath>    <lightweight>true</lightweight>  </definition>  <triggers/>  <disabled>false</disabled><script>// Manually pulled from git based on configurations
pipeline {    agent {        node {            label 'build_slave_podman'        }    }    environment {        BUILD_NAME = "VM Based Selenium Testing"        NOTIFYUSERS = 'sakthip@newtglobalcorp.com'        BUILD_DETAILS = "&lt;BR&gt;Job Name: ${env.JOB_NAME} &lt;BR&gt;Build Number: ${env.BUILD_NUMBER} &lt;BR&gt;Build URL: ${BUILD_URL}"    }    options {        timestamps()        timeout(time: 12, unit: 'HOURS')        buildDiscarder(logRotator(numToKeepStr: '10'))    }    stages {        stage ("Checkout Code") {            steps {                script {                    dir("Installer") {                        deleteDir()                        echo "Checkout the DMAP Infra code"                        if ("${params.VM}" == 'Azure') {                            git branch: "dmap_setup_azure", credentialsId: 'Kavya_1709', url: 'https://github.com/newtglobalgit/dmap-infra.git'                        } else if ("${params.VM}" == 'GCP') {                            git branch: "dmap_setup_gcp", credentialsId: 'Kavya_1709', url: 'https://github.com/newtglobalgit/dmap-infra.git'                        }                    }            }            }        }        stage ("Execute DMAP installer") {            steps {                dir("Installer") {                    echo "Execute dmap_installer.sh"                    //sh "dmap_installer.sh"                    //sleep 1200                }            }        }		    }    post {        always {            emailext subject: "Jenkins Job Report For ${BUILD_NAME} - ${currentBuild.currentResult}",            body: "BUILD DETAILS: ${BUILD_DETAILS} &lt;BR&gt; BUILD STATUS: ${currentBuild.currentResult}",            to: "${NOTIFYUSERS}"        }    }}</script></flow-definition>